/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface IFlowSetupInterface extends utils.Interface {
  functions: {
    "addSuperToken(address)": FunctionFragment;
    "getMaxFlowDurationPerUnitFlowAmount()": FunctionFragment;
    "getMinimumDepositAmount()": FunctionFragment;
    "getMinimumFlowAmount()": FunctionFragment;
    "getSTBufferDurationInSecond()": FunctionFragment;
    "isSuperTokensSupported(address)": FunctionFragment;
    "removeSuperToken(address)": FunctionFragment;
    "setMaxFlowDurationPerUnitFlowAmount(uint96)": FunctionFragment;
    "setMinimumDepositAmount(uint96)": FunctionFragment;
    "setMinimumFlowAmount(uint96)": FunctionFragment;
    "setSTBufferAmount(uint256)": FunctionFragment;
    "withdrawSuperToken(address,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addSuperToken"
      | "getMaxFlowDurationPerUnitFlowAmount"
      | "getMinimumDepositAmount"
      | "getMinimumFlowAmount"
      | "getSTBufferDurationInSecond"
      | "isSuperTokensSupported"
      | "removeSuperToken"
      | "setMaxFlowDurationPerUnitFlowAmount"
      | "setMinimumDepositAmount"
      | "setMinimumFlowAmount"
      | "setSTBufferAmount"
      | "withdrawSuperToken"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addSuperToken",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxFlowDurationPerUnitFlowAmount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMinimumDepositAmount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMinimumFlowAmount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSTBufferDurationInSecond",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isSuperTokensSupported",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "removeSuperToken",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaxFlowDurationPerUnitFlowAmount",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMinimumDepositAmount",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMinimumFlowAmount",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setSTBufferAmount",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawSuperToken",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "addSuperToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxFlowDurationPerUnitFlowAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinimumDepositAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinimumFlowAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSTBufferDurationInSecond",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isSuperTokensSupported",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeSuperToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaxFlowDurationPerUnitFlowAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMinimumDepositAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMinimumFlowAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSTBufferAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawSuperToken",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IFlowSetup extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IFlowSetupInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addSuperToken(
      _superToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getMaxFlowDurationPerUnitFlowAmount(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMinimumDepositAmount(overrides?: CallOverrides): Promise<[BigNumber]>;

    getMinimumFlowAmount(overrides?: CallOverrides): Promise<[BigNumber]>;

    getSTBufferDurationInSecond(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    isSuperTokensSupported(
      _superToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    removeSuperToken(
      _superToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMaxFlowDurationPerUnitFlowAmount(
      _duration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMinimumDepositAmount(
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMinimumFlowAmount(
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setSTBufferAmount(
      _duration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    withdrawSuperToken(
      _superToken: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addSuperToken(
    _superToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getMaxFlowDurationPerUnitFlowAmount(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMinimumDepositAmount(overrides?: CallOverrides): Promise<BigNumber>;

  getMinimumFlowAmount(overrides?: CallOverrides): Promise<BigNumber>;

  getSTBufferDurationInSecond(overrides?: CallOverrides): Promise<BigNumber>;

  isSuperTokensSupported(
    _superToken: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  removeSuperToken(
    _superToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMaxFlowDurationPerUnitFlowAmount(
    _duration: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMinimumDepositAmount(
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMinimumFlowAmount(
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setSTBufferAmount(
    _duration: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  withdrawSuperToken(
    _superToken: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addSuperToken(
      _superToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    getMaxFlowDurationPerUnitFlowAmount(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMinimumDepositAmount(overrides?: CallOverrides): Promise<BigNumber>;

    getMinimumFlowAmount(overrides?: CallOverrides): Promise<BigNumber>;

    getSTBufferDurationInSecond(overrides?: CallOverrides): Promise<BigNumber>;

    isSuperTokensSupported(
      _superToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    removeSuperToken(
      _superToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaxFlowDurationPerUnitFlowAmount(
      _duration: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMinimumDepositAmount(
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMinimumFlowAmount(
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setSTBufferAmount(
      _duration: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawSuperToken(
      _superToken: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addSuperToken(
      _superToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getMaxFlowDurationPerUnitFlowAmount(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMinimumDepositAmount(overrides?: CallOverrides): Promise<BigNumber>;

    getMinimumFlowAmount(overrides?: CallOverrides): Promise<BigNumber>;

    getSTBufferDurationInSecond(overrides?: CallOverrides): Promise<BigNumber>;

    isSuperTokensSupported(
      _superToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeSuperToken(
      _superToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMaxFlowDurationPerUnitFlowAmount(
      _duration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMinimumDepositAmount(
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMinimumFlowAmount(
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setSTBufferAmount(
      _duration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    withdrawSuperToken(
      _superToken: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addSuperToken(
      _superToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getMaxFlowDurationPerUnitFlowAmount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMinimumDepositAmount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMinimumFlowAmount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSTBufferDurationInSecond(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isSuperTokensSupported(
      _superToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeSuperToken(
      _superToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMaxFlowDurationPerUnitFlowAmount(
      _duration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMinimumDepositAmount(
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMinimumFlowAmount(
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setSTBufferAmount(
      _duration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    withdrawSuperToken(
      _superToken: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
