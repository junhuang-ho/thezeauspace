/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  InitTest,
  InitTestInterface,
} from "../../../contracts/tests/InitTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610121806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063b7b0422d14602d575b600080fd5b60436004803603810190603f919060c3565b6045565b005b604c81604f565b50565b8060566060565b6000018190555050565b6000807f7375a7f63427bb424f9e0a1d030dd6a96a0933c56047b4d71ac9da62a0b0ce2990508091505090565b600080fd5b6000819050919050565b60a3816092565b811460ad57600080fd5b50565b60008135905060bd81609c565b92915050565b60006020828403121560d65760d5608d565b5b600060e28482850160b0565b9150509291505056fea264697066735822122053747af61b551fa1d6e9a2a89c84046c5c66ec897c3a7eb9a74e1d4e1edc79bc64736f6c63430008120033";

type InitTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitTest__factory extends ContractFactory {
  constructor(...args: InitTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InitTest> {
    return super.deploy(overrides || {}) as Promise<InitTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InitTest {
    return super.attach(address) as InitTest;
  }
  override connect(signer: Signer): InitTest__factory {
    return super.connect(signer) as InitTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitTestInterface {
    return new utils.Interface(_abi) as InitTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitTest {
    return new Contract(address, _abi, signerOrProvider) as InitTest;
  }
}
