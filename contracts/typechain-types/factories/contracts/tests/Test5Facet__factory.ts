/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Test5Facet,
  Test5FacetInterface,
} from "../../../contracts/tests/Test5Facet";

const _abi = [
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "test5Func1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "test5Func2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101d9806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632096525514610051578063552410771461006f578063ae9aad3e1461008b578063fbf5c5aa14610095575b600080fd5b61005961009f565b604051610066919061012a565b60405180910390f35b61008960048036038101906100849190610176565b6100ae565b005b6100936100ba565b005b61009d6100bc565b005b60006100a96100be565b905090565b6100b7816100d1565b50565b565b565b60006100c86100e4565b60000154905090565b806100da6100e4565b6000018190555050565b6000807f7375a7f63427bb424f9e0a1d030dd6a96a0933c56047b4d71ac9da62a0b0ce2990508091505090565b6000819050919050565b61012481610111565b82525050565b600060208201905061013f600083018461011b565b92915050565b600080fd5b61015381610111565b811461015e57600080fd5b50565b6000813590506101708161014a565b92915050565b60006020828403121561018c5761018b610145565b5b600061019a84828501610161565b9150509291505056fea26469706673582212205d355169b04faf01c476a85549834aac956d30a67401472e435005078c03353d64736f6c63430008120033";

type Test5FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Test5FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Test5Facet__factory extends ContractFactory {
  constructor(...args: Test5FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Test5Facet> {
    return super.deploy(overrides || {}) as Promise<Test5Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Test5Facet {
    return super.attach(address) as Test5Facet;
  }
  override connect(signer: Signer): Test5Facet__factory {
    return super.connect(signer) as Test5Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Test5FacetInterface {
    return new utils.Interface(_abi) as Test5FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Test5Facet {
    return new Contract(address, _abi, signerOrProvider) as Test5Facet;
  }
}
