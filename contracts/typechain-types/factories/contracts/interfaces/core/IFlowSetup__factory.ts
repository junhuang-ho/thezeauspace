/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFlowSetup,
  IFlowSetupInterface,
} from "../../../../contracts/interfaces/core/IFlowSetup";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "_superToken",
        type: "address",
      },
    ],
    name: "addSuperToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxFlowDurationPerUnitFlowAmount",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumDepositAmount",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumFlowAmount",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSTBufferDurationInSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "_superToken",
        type: "address",
      },
    ],
    name: "isSuperTokensSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "_superToken",
        type: "address",
      },
    ],
    name: "removeSuperToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_duration",
        type: "uint96",
      },
    ],
    name: "setMaxFlowDurationPerUnitFlowAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_amount",
        type: "uint96",
      },
    ],
    name: "setMinimumDepositAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_amount",
        type: "uint96",
      },
    ],
    name: "setMinimumFlowAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setSTBufferAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperToken",
        name: "_superToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawSuperToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFlowSetup__factory {
  static readonly abi = _abi;
  static createInterface(): IFlowSetupInterface {
    return new utils.Interface(_abi) as IFlowSetupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFlowSetup {
    return new Contract(address, _abi, signerOrProvider) as IFlowSetup;
  }
}
